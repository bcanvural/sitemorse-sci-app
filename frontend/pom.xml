<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.bloomreach</groupId>
    <artifactId>sitemorse-sci-app</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <artifactId>frontend</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>
  <properties>
    <external.app.name>hippo-sitemorse-app</external.app.name>
    <external.app.outDir>dist</external.app.outDir>
  </properties>

  <profiles>
    <profile>
      <id>
        full
      </id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.3.2</version>
            <executions>
              <!-- Required: The following will ensure `npm install` is called
                   before anything else during the 'Default Lifecycle' -->
              <execution>
                <id>npm install (initialize)</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>initialize</phase>
                <configuration>
                  <workingDirectory>${external.app.name}</workingDirectory>
                  <executable>npm</executable>
                  <arguments>
                    <argument>install</argument>
                  </arguments>
                </configuration>
              </execution>
              <!-- Required: The following will ensure `npm install` is called
                   before anything else during the 'Clean Lifecycle' -->
              <execution>
                <id>npm install (clean)</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>pre-clean</phase>
                <configuration>
                  <workingDirectory>${external.app.name}</workingDirectory>
                  <executable>npm</executable>
                  <arguments>
                    <argument>install</argument>
                  </arguments>
                </configuration>
              </execution>
              <!-- Required: This following calls `npm run build` where 'build' is
                   the script name I used in my project, change this if yours is
                   different -->
              <execution>
                <id>npm run build (compile)</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>generate-resources</phase>
                <configuration>
                  <workingDirectory>${external.app.name}</workingDirectory>
                  <executable>npm</executable>
                  <arguments>
                    <argument>run</argument>
                    <argument>build</argument>
                  </arguments>
                </configuration>
              </execution>

              <execution>
                <id>copy dist folder</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>generate-resources</phase>
                <configuration>
                  <workingDirectory>${external.app.name}</workingDirectory>
                  <executable>cp</executable>
                  <arguments>
                    <argument>-R</argument>
                    <argument>${external.app.outDir}</argument>
                    <argument>${project.basedir}/src/main/resources/static</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
